name: tests

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
  schedule:
    - cron: "0 0 * * *"

jobs:
  test:
    name: Test on ${{ matrix.cfg.os }}, Python ${{ matrix.cfg.python-version }}

    runs-on: ${{ matrix.cfg.os }}

    strategy:
      matrix:
        cfg:
          - os: ubuntu-latest
            python-version: 3.6
            openff-toolkit: false
            psi4: false

          - os: ubuntu-latest
            python-version: 3.7
            openff-toolkit: true
            psi4: true

          - os: ubuntu-latest
            python-version: 3.8
            openff-toolkit: false
            psi4: false

          - os: macOS-latest
            python-version: 3.6
            openff-toolkit: false
            psi4: false

          - os: macOS-latest
            python-version: 3.7
            openff-toolkit: false
            psi4: true

          - os: macOS-latest
            python-version: 3.7
            openff-toolkit: true
            psi4: false

          - os: macOS-latest
            python-version: 3.8
            openff-toolkit: false
            psi4: false

    env:
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt

    steps:
      - uses: actions/checkout@v2

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.cfg.python-version }}
          environment-file: devtools/conda-envs/test_env.yaml

          channels: conda-forge,defaults

          activate-environment: test
          auto-update-conda: true
          auto-activate-base: false
          show-channel-urls: true

      - name: Conda Environment Information
        shell: bash -l {0}
        run: |
          conda info
          conda list

      - name: License OpenEye
        shell: bash -l {0}
        run: |

          echo "${SECRET_OE_LICENSE}" > ${OE_LICENSE}
          python -c "from openeye import oechem; assert oechem.OEChemIsLicensed()"

        env:
          SECRET_OE_LICENSE: ${{ secrets.OE_LICENSE }}

      - name: Install the OpenFF Toolkit
        if: matrix.cfg.openff-toolkit
        shell: bash -l {0}
        run: |

          conda install --yes -c conda-forge -c omnia "openforcefield >= 0.7.0"

      - name: Install PSI4
        if: matrix.cfg.psi4
        shell: bash -l {0}
        run: |

          conda install --yes -c conda-forge -c psi4/label/dev "psi4 <=1.4a2.dev215"

      - name: Install Package
        shell: bash -l {0}
        run: |
          python setup.py develop --no-deps

      - name: Run Tests
        shell: bash -l {0}
        run: |
          pytest -v --cov=openff openff/recharge/tests/ --cov-report=xml

      - name: CodeCov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
